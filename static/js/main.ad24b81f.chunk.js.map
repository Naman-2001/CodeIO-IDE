{"version":3,"sources":["components/MenuBar.js","components/CodeIO.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","padding","formControl","margin","spacing","minWidth","selectEmpty","marginTop","MenuBar","handleLanguage","handleReset","handleTheme","useState","lang","setLang","setTheme","AppBar","position","style","width","height","background","Grid","container","item","FormControl","variant","borderRadius","backgroundColor","Select","value","label","onChange","e","target","MenuItem","Button","onClick","color","prev","require","base64","CodeIO","code","setCode","setToken","output","setOutput","input","setInput","setReset","theme2","codeMirrorRef","useRef","useEffect","current","ydoc","Y","meta","cellId","wsProvider","WebsocketProvider","yText","getText","person","prompt","awareness","setLocalStateField","name","on","event","console","log","status","CodemirrorBinding","handleSubmit","token","axios","method","url","headers","useQueryString","then","res","data","compile_output","str","decode","stdout","atob","catch","err","xs","sm","border","fontSize","id","editorDidMount","editor","setSize","options","mode","lineNumbers","lineWrapping","matchBrackets","styleActiveLine","nonEmpty","styleActiveSelected","smartIndent","highlightSelectionMatches","showToken","annotateScrollbar","autoCloseBrackets","extraKeys","cm","foldCode","getCursor","execCommand","toggleComment","foldGutter","gutters","onBeforeChange","bool","ctheme","className","zIndex","source","inp","accept","language_id","source_code","stdin","response","setTimeout","error","flexGrow","textAlign","menuButton","marginRight","Navbar","classes","Toolbar","justify","Typography","App","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","fetch","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ad24b81f.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\r\nimport SubjectIcon from \"@material-ui/icons/Subject\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"../App.css\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiOutlinedInput-input\": {\r\n      padding: \"0px\",\r\n    },\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst MenuBar = ({ handleLanguage, handleReset, handleTheme }) => {\r\n  const classes = useStyles();\r\n\r\n  const [lang, setLang] = useState(\"C++\");\r\n  const [theme, setTheme] = useState(\"material-ocean\");\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"static\"\r\n      // color=\"secondary\"\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        background: \"linear-gradient(45deg,rgb(232 19 19 / 95%), rgb(0 0 0))\",\r\n      }}\r\n    >\r\n      {/* <Toolbar style={{ height: \"10px\" }}> */}\r\n      <Grid container style={{ padding: \"0px 10px\" }}>\r\n        <Grid\r\n          item\r\n          style={{\r\n            marginTop: \"5px\",\r\n            height: \"30px\",\r\n          }}\r\n        >\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            style={{\r\n              width: \"170px\",\r\n              height: \"30px\",\r\n              borderRadius: \"4px\",\r\n              backgroundColor: \"white\",\r\n            }}\r\n          >\r\n            <Select\r\n              style={{ height: \"30px\", padding: \"0px !important\" }}\r\n              value={lang}\r\n              label=\"C++\"\r\n              onChange={(e) => {\r\n                setLang(e.target.value);\r\n                handleLanguage(e.target.value);\r\n              }}\r\n            >\r\n              <MenuItem value={54}>\r\n                <em>C++</em>\r\n              </MenuItem>\r\n              <MenuItem value={71}>\r\n                <em>Python</em>\r\n              </MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item style={{ margin: \"5px 0px 0px 30px\", height: \"30px\" }}>\r\n          <Button\r\n            onClick={() => {\r\n              handleReset(true);\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ height: \"30px\" }}\r\n          >\r\n            Reset\r\n          </Button>\r\n        </Grid>\r\n        <Grid item style={{ margin: \"0px 0px 5px 30px\", height: \"30px\" }}>\r\n          <Button\r\n            onClick={() => {\r\n              setTheme((prev) => {\r\n                if (prev === \"material-ocean\") {\r\n                  return \"neat\";\r\n                } else {\r\n                  return \"material-ocean\";\r\n                }\r\n              });\r\n              handleTheme(theme);\r\n            }}\r\n          >\r\n            <Brightness7Icon />\r\n          </Button>\r\n        </Grid>\r\n        <Grid item style={{ margin: \"0px 0px 5px 30px\", height: \"30px\" }}>\r\n          <Button>\r\n            <SubjectIcon />\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n      {/* </Toolbar> */}\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default MenuBar;\r\n\r\n{\r\n  /* <MenuItem value={62}>\r\n                    <em>Java</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={63}>\r\n                    <em>Javascript</em>\r\n                  </MenuItem> */\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport axios from \"axios\";\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport copy from \"copy-to-clipboard\";\r\nimport MenuBar from \"./MenuBar\";\r\nimport * as Y from \"yjs\";\r\nimport { WebsocketProvider } from \"y-websocket\";\r\nimport { CodemirrorBinding } from \"y-codemirror\";\r\nimport \"./CodeIO.css\";\r\nrequire(\"codemirror/lib/codemirror.css\");\r\nrequire(\"codemirror/theme/material.css\");\r\nrequire(\"codemirror/addon/selection/active-line\");\r\nrequire(\"codemirror/addon/search/match-highlighter\");\r\nrequire(\"codemirror/addon/scroll/annotatescrollbar.js\");\r\nrequire(\"codemirror/addon/search/matchesonscrollbar.js\");\r\nrequire(\"codemirror/addon/search/searchcursor.js\");\r\nrequire(\"codemirror/addon/search/match-highlighter.js\");\r\nrequire(\"codemirror/theme/material-ocean.css\");\r\nrequire(\"codemirror/theme/neat.css\");\r\nrequire(\"codemirror/mode/xml/xml.js\");\r\nrequire(\"codemirror/mode/clike/clike.js\");\r\nrequire(\"codemirror/mode/python/python.js\");\r\nrequire(\"codemirror/mode/cmake/cmake.js\");\r\nrequire(\"codemirror/mode/javascript/javascript.js\");\r\nrequire(\"codemirror/addon/edit/matchbrackets.js\");\r\nrequire(\"codemirror/addon/edit/closebrackets.js\");\r\nrequire(\"codemirror/addon/fold/foldgutter.js\");\r\nrequire(\"codemirror/addon/fold/foldgutter.css\");\r\nrequire(\"codemirror/addon/fold/brace-fold.js\");\r\nrequire(\"codemirror/addon/fold/comment-fold.js\");\r\nrequire(\"codemirror/addon/fold/indent-fold.js\");\r\nrequire(\"codemirror/addon/fold/markdown-fold.js\");\r\nrequire(\"codemirror/addon/fold/xml-fold.js\");\r\nrequire(\"codemirror/addon/comment/comment.js\");\r\nvar base64 = require(\"base-64\");\r\n\r\nfunction CodeIO() {\r\n  const [code, setCode] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  const [output, setOutput] = useState(\"See Output Here\");\r\n  const [input, setInput] = useState(\"\");\r\n  const [lang, setLang] = useState(\"C++\");\r\n  const [reset, setReset] = useState(false);\r\n  const [theme2, setTheme] = useState(\"material-ocean\");\r\n  const codeMirrorRef = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!codeMirrorRef.current) return;\r\n\r\n    // A Yjs document holds the shared data\r\n\r\n    const ydoc = new Y.Doc({\r\n      meta: {\r\n        cellId: 1,\r\n      },\r\n    });\r\n\r\n    const wsProvider = new WebsocketProvider(\r\n      \"ws://0a4b46d919d9.ngrok.io\",\r\n      1,\r\n      ydoc\r\n    );\r\n    // Define a shared text type on the document\r\n    const yText = ydoc.getText(`codemirror`);\r\n    var person = prompt(\"Please enter your name\");\r\n    wsProvider.awareness.setLocalStateField(\"user\", {\r\n      name: person,\r\n      color: \"#008833\",\r\n    });\r\n\r\n    let status;\r\n\r\n    wsProvider.on(\"status\", (event) => {\r\n      console.log(event.status); // logs \"connected\" or \"disconnected\"\r\n      status = event.status;\r\n      if (event.status == \"connected\") {\r\n        const _codemirrorBinding = new CodemirrorBinding(\r\n          yText,\r\n          codeMirrorRef.current,\r\n          wsProvider.awareness\r\n        );\r\n      }\r\n    });\r\n  }, []);\r\n\r\n  const handleSubmitCode = () => {\r\n    const source = `${code}`;\r\n    const inp = `${input}`;\r\n    // console.log(source);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `https://judge0.p.rapidapi.com/submissions`,\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        \"x-rapidapi-host\": \"judge0.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": \"7b3dddefe1msheb8ab51a9e386f1p114d8ejsn6f6d49dd4d69\",\r\n        accept: \"application/json\",\r\n        useQueryString: true,\r\n      },\r\n      data: {\r\n        language_id: lang,\r\n        source_code: source,\r\n        stdin: inp,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setToken(response.data.token);\r\n        setTimeout(() => {\r\n          handleSubmit(response.data.token);\r\n        }, 3000);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (token) => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: `https://judge0.p.rapidapi.com/submissions/${token}?base64_encoded=true`,\r\n      headers: {\r\n        \"content-type\": \"application/octet-stream\",\r\n        \"x-rapidapi-host\": \"judge0.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": `0e3af1fc74mshad035c1ca88d824p139da6jsn8ab4b4057169`,\r\n        useQueryString: true,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.data.compile_output) {\r\n          let str = res.data.compile_output;\r\n          console.log(base64.decode(str));\r\n          setOutput(base64.decode(str));\r\n        } else if (res.data.stdout) {\r\n          setOutput(atob(res.data.stdout));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // const handleChange = (value) => {\r\n  //   setCode(value);\r\n  // };\r\n\r\n  // const handleInput = (value) => {\r\n  //   setInput(value);\r\n  // };\r\n\r\n  const handleLanguage = (lang) => {\r\n    setLang(lang);\r\n  };\r\n\r\n  const handleReset = (bool) => {\r\n    setCode(\"\");\r\n    setReset(bool);\r\n  };\r\n\r\n  const handleTheme = (ctheme) => {\r\n    setTheme(ctheme);\r\n  };\r\n\r\n  // const handleTab = (e) => {\r\n  //   if (e.keyCode === 9) {\r\n  //     // tab was pressed\r\n  //     // get caret position/selection\r\n  //     var start = e.target.selectionStart;\r\n  //     var end = e.target.selectionEnd;\r\n\r\n  //     var target = e.target;\r\n  //     var value = target.value;\r\n\r\n  //     // set textarea value to: text before caret + tab + text after caret\r\n  //     target.value = value.substring(0, start) + \"\\t\" + value.substring(end);\r\n\r\n  //     // put caret at right position again (add one for the tab)\r\n  //     e.target.selectionStart = e.target.selectionEnd = start + 1;\r\n\r\n  //     // prevent the focus lose\r\n  //     e.preventDefault();\r\n  //   }\r\n  // };\r\n\r\n  // const insertInto = (str, input) => {\r\n  //   var val = input.value,\r\n  //     s = input.selectionStart,\r\n  //     e = input.selectionEnd;\r\n  //   input.value = val.slice(0, e) + str + val.slice(e);\r\n  //   if (e == s) input.selectionStart += str.length - 1;\r\n  //   input.selectionEnd = e + str.length - 1;\r\n  // };\r\n\r\n  // const handleClose = (e) => {\r\n  //   switch (e.key) {\r\n  //     case \"{\":\r\n  //       return insertInto(\"}\", e.target);\r\n  //     case \"[\":\r\n  //       return insertInto(\"]\", e.target);\r\n  //     case \"(\":\r\n  //       return insertInto(\")\", e.target);\r\n  //     case \"<\":\r\n  //       return insertInto(\">\", e.target);\r\n  //     case `\"`:\r\n  //       return insertInto(`\"`, e.target);\r\n  //     case `'`:\r\n  //       return insertInto(`'`, e.target);\r\n  //     default:\r\n  //   }\r\n  // };\r\n\r\n  const handleNewTab = () => {\r\n    window.open(\"https://localhost:300\", \"_blank\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", height: \"560px\" }}>\r\n      <Grid\r\n        container\r\n        style={{\r\n          height: \"560px\",\r\n          width: \"100%\",\r\n          // padding: \"20px\",\r\n        }}\r\n      >\r\n        <Grid item container xs={12} sm={8}>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={12}\r\n            style={{\r\n              height: \"85vh\",\r\n              border: \"4px solid black\",\r\n              fontSize: \"15px\",\r\n            }}\r\n          >\r\n            <CodeMirror //code\r\n              id=\"textarea\"\r\n              // value={reset ? \" \" : { code }}\r\n              value={code}\r\n              editorDidMount={(editor) => {\r\n                codeMirrorRef.current = editor;\r\n                editor.setSize(\"\", \"83.7vh\");\r\n              }}\r\n              options={{\r\n                mode:\r\n                  lang === 54 ? \"text/x-c++src\" : lang === 71 ? \"python\" : null,\r\n                // mode: \"python\",\r\n                theme: theme2,\r\n                lineNumbers: true,\r\n                lineWrapping: true,\r\n                matchBrackets: true,\r\n                styleActiveLine: { nonEmpty: true },\r\n                styleActiveSelected: true,\r\n                smartIndent: true,\r\n                highlightSelectionMatches: {\r\n                  showToken: /\\w/,\r\n                  annotateScrollbar: true,\r\n                },\r\n                autoCloseBrackets: true,\r\n                extraKeys: {\r\n                  \"Ctrl-Q\": function (cm) {\r\n                    cm.foldCode(cm.getCursor());\r\n                  },\r\n\r\n                  // 'Ctrl-/': editor.execCommand('toggleComment')\r\n                  \"Ctrl-/\": function (cm) {\r\n                    cm.execCommand(cm.toggleComment());\r\n                  },\r\n                },\r\n                foldGutter: true,\r\n                gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\r\n              }}\r\n              onBeforeChange={(editor, data, value) => {\r\n                setReset(false);\r\n                setCode(value);\r\n              }}\r\n            />\r\n            {/* <button\r\n              style={{\r\n                // position: \"absolute\",\r\n                // right: \"32px\",\r\n                // top: \"85px\",\r\n                // cursor: \"pointer\",\r\n                position: \"relative\",\r\n                left: \"49rem\",\r\n                top: \"7px\",\r\n                cursor: \"pointer\",\r\n                zIndex: \"10\",\r\n              }}\r\n              onClick={() => {\r\n                copy(code);\r\n              }}\r\n            >\r\n              <FileCopyOutlinedIcon />\r\n            </button> */}\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={12}\r\n            style={{ height: \"46px\", border: \"2px solid black\" }}\r\n          >\r\n            <MenuBar\r\n              handleLanguage={handleLanguage}\r\n              handleReset={handleReset}\r\n              handleTheme={handleTheme}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item container xs={12} sm={4} spacing={0}>\r\n          <Grid item container style={{ height: \"85vh\" }}>\r\n            <Grid item xs={12} sm={12} style={{ border: \"4px solid black\" }}>\r\n              <CodeMirror //input\r\n                name=\"code\"\r\n                value={input}\r\n                editorDidMount={(editor) => {\r\n                  editor.setSize(\"\", \"42vh\");\r\n                }}\r\n                options={{\r\n                  mode: \"text/x-c++src\",\r\n                  theme: theme2,\r\n                  // lineNumbers: true,\r\n                  // foldOptions: true,\r\n                  // foldGutter: true,\r\n                  // gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\r\n                }}\r\n                onBeforeChange={(editor, data, value) => {\r\n                  setInput(value);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid item xs={12} sm={12} style={{ border: \"4px solid black\" }}>\r\n              <CodeMirror //output\r\n                name=\"code\"\r\n                value={output}\r\n                editorDidMount={(editor) => {\r\n                  editor.setSize(\"\", \"40vh\");\r\n                }}\r\n                options={{\r\n                  mode: \"text/x-c++src\",\r\n                  theme: theme2,\r\n                  // lineNumbers: true,\r\n                  // gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\r\n                  // matchBrackets: true,\r\n                  // autoCloseBrackets: true,\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={12}\r\n            className=\"shadow\"\r\n            // style={{ height: \"46px\" }}\r\n          >\r\n            <Button\r\n              style={{\r\n                width: \"98%\",\r\n                height: \"80%\",\r\n                margin: \"4px\",\r\n                borderRadius: \"0px\",\r\n                zIndex: \"1000000000\",\r\n                color: \"white\",\r\n                background:\r\n                  \"linear-gradient(45deg,rgb(0 0 0 / 64%), rgb(18 16 24 / 97%))\",\r\n              }}\r\n              variant=\"contained\"\r\n              // color=\"primary\"\r\n              onClick={handleSubmitCode}\r\n            >\r\n              Compile And Run\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CodeIO;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    textAlign: \"center\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position=\"static\"\r\n        style={{\r\n          textAlign: \"center\",\r\n          background: \"linear-gradient(45deg, #171515, #7e1111)\",\r\n        }}\r\n      >\r\n        <Toolbar variant=\"dense\" style={{ textAlign: \"center\" }}>\r\n          {/* <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n          <Grid container justify=\"center\">\r\n            <Grid item>\r\n              <Typography variant=\"h6\" color=\"inherit\">\r\n                CODEIO IDE\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport CodeIO from \"./components/CodeIO\";\r\nimport Navbar from \"./components/Navbar\";\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <CodeIO />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister()\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message)\r\n      })\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nserviceWorker.register();\r\n"],"sourceRoot":""}