{"version":3,"sources":["components/MenuBar.js","components/CodeIO.js","components/Navbar.js","App.js","index.js"],"names":["useStyles","makeStyles","theme","root","padding","formControl","margin","spacing","minWidth","selectEmpty","marginTop","MenuBar","handleLanguage","handleReset","handleTheme","useState","lang","setLang","setTheme","AppBar","position","color","Toolbar","variant","Grid","container","item","justify","style","height","FormControl","width","borderRadius","backgroundColor","Select","value","label","onChange","e","target","MenuItem","Button","onClick","prev","require","base64","CodeIO","code","setCode","setToken","output","setOutput","input","setInput","setReset","theme2","handleSubmit","token","axios","method","url","headers","useQueryString","then","res","data","compile_output","str","console","log","decode","atob","stdout","catch","err","sm","border","id","editorDidMount","editor","setSize","options","mode","lineNumbers","lineWrapping","matchBrackets","smartIndent","autoCloseBrackets","extraKeys","cm","foldCode","getCursor","execCommand","toggleComment","foldGutter","gutters","onBeforeChange","left","top","cursor","zIndex","copy","bool","ctheme","name","foldOptions","source","inp","accept","language_id","source_code","stdin","response","setTimeout","error","flexGrow","textAlign","menuButton","marginRight","Navbar","classes","className","Typography","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6ef0c398.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\r\nimport SubjectIcon from \"@material-ui/icons/Subject\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"../App.css\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiOutlinedInput-input\": {\r\n      padding: \"0px\",\r\n    },\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst MenuBar = ({ handleLanguage, handleReset, handleTheme }) => {\r\n  const classes = useStyles();\r\n\r\n  const [lang, setLang] = useState(\"C++\");\r\n  const [theme, setTheme] = useState(\"material\");\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"secondary\">\r\n      <Toolbar variant=\"dense\">\r\n        <Grid container>\r\n          <Grid item container justify=\"flex-start\">\r\n            <Grid\r\n              item\r\n              style={{\r\n                marginTop: \"5px\",\r\n                height: \"40px\",\r\n              }}\r\n            >\r\n              <FormControl\r\n                variant=\"outlined\"\r\n                style={{\r\n                  width: \"170px\",\r\n                  height: \"30px\",\r\n                  borderRadius: \"4px\",\r\n                  backgroundColor: \"white\",\r\n                }}\r\n              >\r\n                <Select\r\n                  style={{ height: \"30px\", padding: \"0px !important\" }}\r\n                  value={lang}\r\n                  // labelId=\"demo-simple-select-outlined-label\"\r\n                  // id=\"demo-simple-select-outlined\"\r\n                  label=\"C++\"\r\n                  onChange={(e) => {\r\n                    setLang(e.target.value);\r\n                    handleLanguage(e.target.value);\r\n                  }}\r\n                >\r\n                  <MenuItem value={54}>\r\n                    <em>C++</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={71}>\r\n                    <em>Python</em>\r\n                  </MenuItem>\r\n                  {/* <MenuItem value={62}>\r\n                    <em>Java</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={63}>\r\n                    <em>Javascript</em>\r\n                  </MenuItem> */}\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item style={{ margin: \"5px 0px 0px 30px\" }}>\r\n              <Button\r\n                onClick={() => {\r\n                  handleReset(true);\r\n                }}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Reset\r\n              </Button>\r\n            </Grid>\r\n            <Grid item style={{ margin: \"5px 0px 5px 30px\" }}>\r\n              <Button\r\n                onClick={() => {\r\n                  setTheme((prev) => {\r\n                    if (prev === \"material\") {\r\n                      return \"neat\";\r\n                    } else {\r\n                      return \"material\";\r\n                    }\r\n                  });\r\n                  handleTheme(theme);\r\n                }}\r\n              >\r\n                <Brightness7Icon />\r\n              </Button>\r\n            </Grid>\r\n            <Grid item style={{ margin: \"5px 0px 5px 30px\" }}>\r\n              <Button>\r\n                <SubjectIcon />\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default MenuBar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport axios from \"axios\";\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport copy from \"copy-to-clipboard\";\r\nimport MenuBar from \"./MenuBar\";\r\nimport \"./CodeIO.css\";\r\n\r\nrequire(\"codemirror/lib/codemirror.css\");\r\nrequire(\"codemirror/theme/material.css\");\r\nrequire(\"codemirror/theme/neat.css\");\r\nrequire(\"codemirror/mode/xml/xml.js\");\r\nrequire(\"codemirror/mode/clike/clike.js\");\r\nrequire(\"codemirror/mode/python/python.js\");\r\nrequire(\"codemirror/mode/cmake/cmake.js\");\r\nrequire(\"codemirror/mode/javascript/javascript.js\");\r\nrequire(\"codemirror/addon/edit/matchbrackets.js\");\r\nrequire(\"codemirror/addon/edit/closebrackets.js\");\r\nrequire(\"codemirror/addon/fold/foldgutter.js\");\r\nrequire(\"codemirror/addon/fold/foldgutter.css\");\r\nrequire(\"codemirror/addon/fold/brace-fold.js\");\r\nrequire(\"codemirror/addon/fold/comment-fold.js\");\r\nrequire(\"codemirror/addon/fold/indent-fold.js\");\r\nrequire(\"codemirror/addon/fold/markdown-fold.js\");\r\nrequire(\"codemirror/addon/fold/xml-fold.js\");\r\nrequire(\"codemirror/addon/comment/comment.js\");\r\nvar base64 = require(\"base-64\");\r\n\r\nfunction CodeIO() {\r\n  const [code, setCode] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  const [output, setOutput] = useState(\"See Output Here\");\r\n  const [input, setInput] = useState(\"\");\r\n  const [lang, setLang] = useState(\"C++\");\r\n  const [reset, setReset] = useState(false);\r\n  const [theme2, setTheme] = useState(\"material\");\r\n\r\n  const handleSubmitCode = () => {\r\n    const source = `${code}`;\r\n    const inp = `${input}`;\r\n    // console.log(source);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `https://judge0.p.rapidapi.com/submissions`,\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        \"x-rapidapi-host\": \"judge0.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": \"7b3dddefe1msheb8ab51a9e386f1p114d8ejsn6f6d49dd4d69\",\r\n        accept: \"application/json\",\r\n        useQueryString: true,\r\n      },\r\n      data: {\r\n        language_id: lang,\r\n        source_code: source,\r\n        stdin: inp,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setToken(response.data.token);\r\n        setTimeout(() => {\r\n          handleSubmit(response.data.token);\r\n        }, 5000);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (token) => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: `https://judge0.p.rapidapi.com/submissions/${token}?base64_encoded=true`,\r\n      headers: {\r\n        \"content-type\": \"application/octet-stream\",\r\n        \"x-rapidapi-host\": \"judge0.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": `0e3af1fc74mshad035c1ca88d824p139da6jsn8ab4b4057169`,\r\n        useQueryString: true,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.data.compile_output) {\r\n          let str = res.data.compile_output;\r\n          console.log(base64.decode(str));\r\n          setOutput(base64.decode(str));\r\n        } else {\r\n          setOutput(atob(res.data.stdout));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // const handleChange = (value) => {\r\n  //   setCode(value);\r\n  // };\r\n\r\n  // const handleInput = (value) => {\r\n  //   setInput(value);\r\n  // };\r\n\r\n  const handleLanguage = (lang) => {\r\n    setLang(lang);\r\n  };\r\n\r\n  const handleReset = (bool) => {\r\n    setCode(\"\");\r\n    setReset(bool);\r\n  };\r\n\r\n  const handleTheme = (ctheme) => {\r\n    setTheme(ctheme);\r\n  };\r\n\r\n  // const handleTab = (e) => {\r\n  //   if (e.keyCode === 9) {\r\n  //     // tab was pressed\r\n  //     // get caret position/selection\r\n  //     var start = e.target.selectionStart;\r\n  //     var end = e.target.selectionEnd;\r\n\r\n  //     var target = e.target;\r\n  //     var value = target.value;\r\n\r\n  //     // set textarea value to: text before caret + tab + text after caret\r\n  //     target.value = value.substring(0, start) + \"\\t\" + value.substring(end);\r\n\r\n  //     // put caret at right position again (add one for the tab)\r\n  //     e.target.selectionStart = e.target.selectionEnd = start + 1;\r\n\r\n  //     // prevent the focus lose\r\n  //     e.preventDefault();\r\n  //   }\r\n  // };\r\n\r\n  // const insertInto = (str, input) => {\r\n  //   var val = input.value,\r\n  //     s = input.selectionStart,\r\n  //     e = input.selectionEnd;\r\n  //   input.value = val.slice(0, e) + str + val.slice(e);\r\n  //   if (e == s) input.selectionStart += str.length - 1;\r\n  //   input.selectionEnd = e + str.length - 1;\r\n  // };\r\n\r\n  // const handleClose = (e) => {\r\n  //   switch (e.key) {\r\n  //     case \"{\":\r\n  //       return insertInto(\"}\", e.target);\r\n  //     case \"[\":\r\n  //       return insertInto(\"]\", e.target);\r\n  //     case \"(\":\r\n  //       return insertInto(\")\", e.target);\r\n  //     case \"<\":\r\n  //       return insertInto(\">\", e.target);\r\n  //     case `\"`:\r\n  //       return insertInto(`\"`, e.target);\r\n  //     case `'`:\r\n  //       return insertInto(`'`, e.target);\r\n  //     default:\r\n  //   }\r\n  // };\r\n\r\n  const handleNewTab = () => {\r\n    window.open(\"https://localhost:300\", \"_blank\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <Grid\r\n        container\r\n        style={{\r\n          // height: \"100vh\",\r\n          width: \"100%\",\r\n          // padding: \"20px\",\r\n        }}\r\n      >\r\n        <Grid item container sm={8}>\r\n          <Grid\r\n            item\r\n            sm={12}\r\n            style={{ height: \"85vh\", border: \"4px solid black\" }}\r\n          >\r\n            <CodeMirror //code\r\n              id=\"textarea\"\r\n              // value={reset ? \" \" : { code }}\r\n              value={code}\r\n              editorDidMount={(editor) => {\r\n                editor.setSize(\"\", \"83.7vh\");\r\n              }}\r\n              options={{\r\n                mode:\r\n                  lang === 54 ? \"text/x-c++src\" : lang === 71 ? \"python\" : null,\r\n                // mode: \"python\",\r\n                theme: theme2,\r\n                lineNumbers: true,\r\n                lineWrapping: true,\r\n                matchBrackets: true,\r\n                smartIndent: true,\r\n                autoCloseBrackets: true,\r\n                extraKeys: {\r\n                  \"Ctrl-Q\": function (cm) {\r\n                    cm.foldCode(cm.getCursor());\r\n                  },\r\n\r\n                  // 'Ctrl-/': editor.execCommand('toggleComment')\r\n                  \"Ctrl-/\": function (cm) {\r\n                    cm.execCommand(cm.toggleComment());\r\n                  },\r\n                },\r\n                foldGutter: true,\r\n                gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\r\n              }}\r\n              onBeforeChange={(editor, data, value) => {\r\n                setReset(false);\r\n                setCode(value);\r\n              }}\r\n            />\r\n            <button\r\n              style={{\r\n                // position: \"absolute\",\r\n                // right: \"32px\",\r\n                // top: \"85px\",\r\n                // cursor: \"pointer\",\r\n                position: \"relative\",\r\n                left: \"49rem\",\r\n                top: \"7px\",\r\n                cursor: \"pointer\",\r\n                zIndex: \"10\",\r\n              }}\r\n              onClick={() => {\r\n                copy(code);\r\n              }}\r\n            >\r\n              <FileCopyOutlinedIcon />\r\n            </button>\r\n          </Grid>\r\n          <Grid item sm={12}>\r\n            <MenuBar\r\n              handleLanguage={handleLanguage}\r\n              handleReset={handleReset}\r\n              handleTheme={handleTheme}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item container sm={4} spacing={0}>\r\n          <Grid item container style={{ height: \"85vh\" }}>\r\n            <Grid\r\n              item\r\n              sm={12}\r\n              style={{ width: \"414.5px\", border: \"4px solid black\" }}\r\n            >\r\n              <CodeMirror //input\r\n                name=\"code\"\r\n                value={input}\r\n                editorDidMount={(editor) => {\r\n                  editor.setSize(\"\", \"270px\");\r\n                }}\r\n                options={{\r\n                  mode: \"text/x-c++src\",\r\n                  theme: theme2,\r\n                  lineNumbers: true,\r\n                  foldOptions: true,\r\n                  foldGutter: true,\r\n                  gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\r\n                }}\r\n                onBeforeChange={(editor, data, value) => {\r\n                  setInput(value);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              sm={12}\r\n              style={{ width: \"414.5px\", border: \"4px solid black\" }}\r\n            >\r\n              <CodeMirror //output\r\n                name=\"code\"\r\n                value={output}\r\n                editorDidMount={(editor) => {\r\n                  editor.setSize(\"\", \"232px\");\r\n                }}\r\n                options={{\r\n                  mode: \"text/x-c++src\",\r\n                  theme: theme2,\r\n                  lineNumbers: true,\r\n                  gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\r\n                  // matchBrackets: true,\r\n                  // autoCloseBrackets: true,\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid item sm={12}>\r\n            <Button\r\n              style={{\r\n                width: \"100%\",\r\n                height: \"7.5vh\",\r\n                margin: \"0px\",\r\n                borderRadius: \"0px\",\r\n              }}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleSubmitCode}\r\n            >\r\n              Run\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      {/* <Grid container style={{ padding: \"20px\" }}>\r\n        <Grid item container sm={6} justify=\"center\">\r\n          <Grid item style={{ width: \"500px\" }}>\r\n            <CodeMirror //input\r\n              name=\"code\"\r\n              value={input}\r\n              options={{\r\n                mode: \"text/x-c++src\",\r\n                theme: theme2,\r\n                lineNumbers: true,\r\n                foldOptions: true,\r\n                foldGutter: true,\r\n                gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\r\n              }}\r\n              onBeforeChange={(editor, data, value) => {\r\n                setInput(value);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleSubmitCode}\r\n            style={{ width: \"70px\" }}\r\n          >\r\n            Compile\r\n          </Button>\r\n        </Grid>\r\n        <Grid item container sm={6} justify=\"center\">\r\n          <Grid item style={{ width: \"500px\" }}>\r\n            <CodeMirror //output\r\n              name=\"code\"\r\n              value={output}\r\n              options={{\r\n                mode: \"text/x-c++src\",\r\n                theme: theme2,\r\n                lineNumbers: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Button\r\n            style={{ width: \"70px\" }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleSubmit}\r\n          >\r\n            Run\r\n          </Button>\r\n        </Grid>\r\n      </Grid> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CodeIO;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    textAlign: \"center\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{ textAlign: \"center\" }}>\r\n        <Toolbar variant=\"dense\" style={{ textAlign: \"center\" }}>\r\n          {/* <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n          <Grid container justify=\"center\">\r\n            <Grid item>\r\n              <Typography variant=\"h6\" color=\"inherit\">\r\n                CODEIO IDE\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport CodeIO from \"./components/CodeIO\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <CodeIO />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}