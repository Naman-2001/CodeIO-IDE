{"version":3,"sources":["components/MenuBar.js","components/CodeIO.js","components/Navbar.js","Home.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","padding","formControl","margin","spacing","minWidth","selectEmpty","marginTop","MenuBar","handleLanguage","handleReset","handleTheme","users","conState","handleConnection","useState","lang","setLang","setTheme","AppBar","position","style","width","height","background","Grid","container","display","alignItems","item","FormControl","variant","borderRadius","backgroundColor","Select","value","label","onChange","e","target","MenuItem","Button","onClick","color","prev","right","map","user","fontSize","border","textAlign","justifyContent","name","slice","require","base64","CodeIO","props","params","match","code","setCode","setToken","output","setOutput","input","setInput","setReset","theme2","setConstate","note","setNote","setUsers","codeMirrorRef","useRef","wsProvider","useEffect","current","ydoc","Y","meta","cellId","WebsocketProvider","id","awareness","yText","getText","person","prompt","Math","floor","random","setLocalStateField","randomcolor","on","event","console","log","status","CodemirrorBinding","getStates","forEach","state","handleSubmit","token","axios","method","url","headers","useQueryString","base64_encoded","fields","then","res","data","compile_output","str","decode","stdout","atob","catch","err","xs","sm","editorDidMount","editor","setSize","options","mode","lineNumbers","lineWrapping","matchBrackets","styleActiveLine","nonEmpty","styleActiveSelected","smartIndent","highlightSelectionMatches","showToken","annotateScrollbar","autoCloseBrackets","extraKeys","cm","foldCode","getCursor","execCommand","toggleComment","foldGutter","gutters","onBeforeChange","roomid","content","bottom","zIndex","rows","type","notes","element","document","createElement","file","Blob","href","URL","createObjectURL","download","body","appendChild","click","TextFile","bool","ctheme","disconnect","connect","className","source","inp","accept","language_id","source_code","stdin","a","response","setTimeout","error","flexGrow","menuButton","marginRight","Navbar","classes","Toolbar","justify","Typography","Home","history","useHistory","email","setEmail","myemail","Axios","push","App","exact","path","component","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","getElementById","process","origin","addEventListener","fetch","contentType","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d88b689b.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\r\nimport SubjectIcon from \"@material-ui/icons/Subject\";\r\nimport WifiIcon from \"@material-ui/icons/Wifi\";\r\nimport WifiOffIcon from \"@material-ui/icons/WifiOff\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport \"../App.css\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiOutlinedInput-input\": {\r\n      padding: \"0px\",\r\n    },\r\n  },\r\n\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst MenuBar = ({\r\n  handleLanguage,\r\n  handleReset,\r\n  handleTheme,\r\n  users,\r\n  conState,\r\n  handleConnection,\r\n}) => {\r\n  const classes = useStyles();\r\n\r\n  const [lang, setLang] = useState(\"C++\");\r\n  const [theme, setTheme] = useState(\"material-ocean\");\r\n\r\n  return (\r\n    <AppBar\r\n      position=\"static\"\r\n      // color=\"secondary\"\r\n      style={{\r\n        width: \"100%\",\r\n        height: \"100%\",\r\n        background: \"linear-gradient(45deg,rgb(232 19 19 / 95%), rgb(0 0 0))\",\r\n      }}\r\n    >\r\n      {/* <Toolbar style={{ height: \"10px\" }}> */}\r\n      <Grid\r\n        container\r\n        style={{\r\n          padding: \"0px 10px\",\r\n          height: \"100%\",\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          position: \"relative\",\r\n        }}\r\n      >\r\n        <Grid\r\n          item\r\n          style={{\r\n            marginTop: \"5px\",\r\n            height: \"30px\",\r\n          }}\r\n        >\r\n          <FormControl\r\n            variant=\"outlined\"\r\n            style={{\r\n              width: \"170px\",\r\n              height: \"30px\",\r\n              borderRadius: \"4px\",\r\n              backgroundColor: \"white\",\r\n            }}\r\n          >\r\n            <Select\r\n              style={{ height: \"30px\", padding: \"0px !important\" }}\r\n              value={lang}\r\n              label=\"C++\"\r\n              onChange={(e) => {\r\n                setLang(e.target.value);\r\n                handleLanguage(e.target.value);\r\n              }}\r\n            >\r\n              <MenuItem value={54}>\r\n                <em>C++</em>\r\n              </MenuItem>\r\n              <MenuItem value={71}>\r\n                <em>Python</em>\r\n              </MenuItem>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item style={{ margin: \"5px 0px 0px 30px\", height: \"30px\" }}>\r\n          <Button\r\n            onClick={() => {\r\n              handleReset(true);\r\n            }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            style={{ height: \"30px\" }}\r\n          >\r\n            Reset\r\n          </Button>\r\n        </Grid>\r\n        <Grid item style={{ margin: \"0px 0px 5px 30px\", height: \"30px\" }}>\r\n          <Button\r\n            onClick={() => {\r\n              setTheme((prev) => {\r\n                if (prev === \"material-ocean\") {\r\n                  return \"neat\";\r\n                } else {\r\n                  return \"material-ocean\";\r\n                }\r\n              });\r\n              handleTheme(theme);\r\n            }}\r\n          >\r\n            <Brightness7Icon />\r\n          </Button>\r\n        </Grid>\r\n        {/* <Grid item style={{ margin: \"0px 0px 5px 30px\", height: \"30px\" }}>\r\n          <Button>\r\n            <SubjectIcon />\r\n          </Button>\r\n        </Grid> */}\r\n        <Grid item style={{ margin: \"0px 0px 5px 30px\", height: \"30px\" }}>\r\n          {conState === \"connected\" ? (\r\n            <Button onClick={() => handleConnection(\"disconnected\")}>\r\n              <WifiIcon />\r\n            </Button>\r\n          ) : (\r\n            <Button onClick={() => handleConnection(\"connected\")}>\r\n              <WifiOffIcon />\r\n            </Button>\r\n          )}\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          style={{\r\n            margin: \"0px 0px 5px 30px\",\r\n            display: \"flex\",\r\n            position: \"absolute\",\r\n            right: \"10px\",\r\n          }}\r\n        >\r\n          {users.map((user) => {\r\n            return (\r\n              <div\r\n                style={{\r\n                  color: \"black\",\r\n                  fontSize: \"1.7rem\",\r\n                  background: user.color,\r\n                  width: \"40px\",\r\n                  height: \"40px\",\r\n                  borderRadius: \"50%\",\r\n                  border: \"2px solid white\",\r\n                  margin: \"10px\",\r\n                  textAlign: \"center\",\r\n                  display: \"flex\",\r\n                  justifyContent: \"center\",\r\n                  alignItems: \"center\",\r\n                }}\r\n              >\r\n                {user.name && user.name.slice(0, 1)}\r\n              </div>\r\n            );\r\n          })}\r\n        </Grid>\r\n      </Grid>\r\n      {/* </Toolbar> */}\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default MenuBar;\r\n\r\n{\r\n  /* <MenuItem value={62}>\r\n                    <em>Java</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={63}>\r\n                    <em>Javascript</em>\r\n                  </MenuItem> */\r\n}\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport axios from \"axios\";\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport copy from \"copy-to-clipboard\";\r\nimport MenuBar from \"./MenuBar\";\r\nimport * as Y from \"yjs\";\r\nimport { WebsocketProvider } from \"y-websocket\";\r\nimport { CodemirrorBinding } from \"y-codemirror\";\r\nimport randomcolor from \"randomcolor\";\r\nimport SaveIcon from \"@material-ui/icons/Save\";\r\nimport GetAppIcon from \"@material-ui/icons/GetApp\";\r\nimport \"./CodeIO.css\";\r\nrequire(\"codemirror/lib/codemirror.css\");\r\nrequire(\"codemirror/theme/material.css\");\r\nrequire(\"codemirror/addon/selection/active-line\");\r\nrequire(\"codemirror/addon/search/match-highlighter\");\r\nrequire(\"codemirror/addon/scroll/annotatescrollbar.js\");\r\nrequire(\"codemirror/addon/search/matchesonscrollbar.js\");\r\nrequire(\"codemirror/addon/search/searchcursor.js\");\r\nrequire(\"codemirror/addon/search/match-highlighter.js\");\r\nrequire(\"codemirror/theme/material-ocean.css\");\r\nrequire(\"codemirror/theme/neat.css\");\r\nrequire(\"codemirror/mode/xml/xml.js\");\r\nrequire(\"codemirror/mode/clike/clike.js\");\r\nrequire(\"codemirror/mode/python/python.js\");\r\nrequire(\"codemirror/mode/cmake/cmake.js\");\r\nrequire(\"codemirror/mode/javascript/javascript.js\");\r\nrequire(\"codemirror/addon/edit/matchbrackets.js\");\r\nrequire(\"codemirror/addon/edit/closebrackets.js\");\r\nrequire(\"codemirror/addon/fold/foldgutter.js\");\r\nrequire(\"codemirror/addon/fold/foldgutter.css\");\r\nrequire(\"codemirror/addon/fold/brace-fold.js\");\r\nrequire(\"codemirror/addon/fold/comment-fold.js\");\r\nrequire(\"codemirror/addon/fold/indent-fold.js\");\r\nrequire(\"codemirror/addon/fold/markdown-fold.js\");\r\nrequire(\"codemirror/addon/fold/xml-fold.js\");\r\nrequire(\"codemirror/addon/comment/comment.js\");\r\nvar base64 = require(\"base-64\");\r\n\r\nfunction CodeIO(props) {\r\n  const {\r\n    match: { params },\r\n  } = props;\r\n\r\n  const [code, setCode] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  const [output, setOutput] = useState(\"See Output Here\");\r\n  const [input, setInput] = useState(\"\");\r\n  const [lang, setLang] = useState(\"C++\");\r\n  const [reset, setReset] = useState(false);\r\n  const [theme2, setTheme] = useState(\"material-ocean\");\r\n  const [conState, setConstate] = useState(\"connected\");\r\n  const [note, setNote] = useState(\"\");\r\n  const [users, setUsers] = useState([]);\r\n  const codeMirrorRef = useRef();\r\n  let wsProvider = useRef();\r\n\r\n  useEffect(() => {\r\n    if (!codeMirrorRef.current) return;\r\n\r\n    // A Yjs document holds the shared data\r\n    const ydoc = new Y.Doc({\r\n      meta: {\r\n        cellId: 1,\r\n      },\r\n    });\r\n\r\n    wsProvider.current = new WebsocketProvider(\r\n      \"wss://codeio-backend.herokuapp.com/\",\r\n      // \"ws://localhost:8000\",\r\n      params.id,\r\n      ydoc\r\n    );\r\n    const awareness = wsProvider.current.awareness;\r\n    // Define a shared text type on the document\r\n    const yText = ydoc.getText(`codemirror`);\r\n    var person = prompt(\r\n      \"Please enter your name\",\r\n      Math.floor(Math.random() * 10) + \"User\"\r\n    );\r\n\r\n    if (person === \" \") {\r\n      person = Math.floor(Math.random() * 10) + \"User\";\r\n    }\r\n\r\n    awareness.setLocalStateField(\"user\", {\r\n      name: person,\r\n      color: randomcolor(),\r\n    });\r\n\r\n    let status;\r\n\r\n    wsProvider.current.on(\"status\", (event) => {\r\n      console.log(event.status); // logs \"connected\" or \"disconnected\"\r\n      status = event.status;\r\n      if (event.status == \"connected\") {\r\n        const _codemirrorBinding = new CodemirrorBinding(\r\n          yText,\r\n          codeMirrorRef.current,\r\n          wsProvider.current.awareness\r\n        );\r\n      }\r\n    });\r\n    awareness.on(\"change\", () => {\r\n      setUsers([]);\r\n      awareness.getStates().forEach((state) => {\r\n        if (state.user) {\r\n          console.log(state.user);\r\n          setUsers((prev) => {\r\n            return [...prev, state.user];\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }, []);\r\n\r\n  const handleSubmitCode = () => {\r\n    const source = `${code}`;\r\n    const inp = `${input}`;\r\n    // console.log(source);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `https://judge0-ce.p.rapidapi.com/submissions`,\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": \"7b3dddefe1msheb8ab51a9e386f1p114d8ejsn6f6d49dd4d69\",\r\n        accept: \"application/json\",\r\n        useQueryString: true,\r\n      },\r\n      data: {\r\n        language_id: lang,\r\n        source_code: source,\r\n        stdin: inp,\r\n      },\r\n    })\r\n      .then(async (response) => {\r\n        console.log(response.data);\r\n        await setToken(response.data.token);\r\n        setTimeout(() => {\r\n          handleSubmit(response.data.token);\r\n        }, 3000);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = (token) => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: `https://judge0-ce.p.rapidapi.com/submissions/${token}`,\r\n      headers: {\r\n        // \"content-type\": \"application/octet-stream\",\r\n        \"x-rapidapi-host\": \"judge0-ce.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": `7b3dddefe1msheb8ab51a9e386f1p114d8ejsn6f6d49dd4d69`,\r\n        useQueryString: true,\r\n      },\r\n      params: { base64_encoded: \"true\", fields: \"*\" },\r\n    })\r\n      .then((res) => {\r\n        if (res.data.compile_output) {\r\n          let str = res.data.compile_output;\r\n          console.log(base64.decode(str));\r\n          setOutput(base64.decode(str));\r\n        } else if (res.data.stdout) {\r\n          setOutput(atob(res.data.stdout));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  // const handleChange = (value) => {\r\n  //   setCode(value);\r\n  // };\r\n\r\n  // const handleInput = (value) => {\r\n  //   setInput(value);\r\n  // };\r\n\r\n  const handleLanguage = (lang) => {\r\n    setLang(lang);\r\n  };\r\n\r\n  const handleReset = (bool) => {\r\n    setCode(\"\");\r\n    setReset(bool);\r\n  };\r\n\r\n  const handleTheme = (ctheme) => {\r\n    setTheme(ctheme);\r\n  };\r\n\r\n  // const handleTab = (e) => {\r\n  //   if (e.keyCode === 9) {\r\n  //     // tab was pressed\r\n  //     // get caret position/selection\r\n  //     var start = e.target.selectionStart;\r\n  //     var end = e.target.selectionEnd;\r\n\r\n  //     var target = e.target;\r\n  //     var value = target.value;\r\n\r\n  //     // set textarea value to: text before caret + tab + text after caret\r\n  //     target.value = value.substring(0, start) + \"\\t\" + value.substring(end);\r\n\r\n  //     // put caret at right position again (add one for the tab)\r\n  //     e.target.selectionStart = e.target.selectionEnd = start + 1;\r\n\r\n  //     // prevent the focus lose\r\n  //     e.preventDefault();\r\n  //   }\r\n  // };\r\n\r\n  // const insertInto = (str, input) => {\r\n  //   var val = input.value,\r\n  //     s = input.selectionStart,\r\n  //     e = input.selectionEnd;\r\n  //   input.value = val.slice(0, e) + str + val.slice(e);\r\n  //   if (e == s) input.selectionStart += str.length - 1;\r\n  //   input.selectionEnd = e + str.length - 1;\r\n  // };\r\n\r\n  // const handleClose = (e) => {\r\n  //   switch (e.key) {\r\n  //     case \"{\":\r\n  //       return insertInto(\"}\", e.target);\r\n  //     case \"[\":\r\n  //       return insertInto(\"]\", e.target);\r\n  //     case \"(\":\r\n  //       return insertInto(\")\", e.target);\r\n  //     case \"<\":\r\n  //       return insertInto(\">\", e.target);\r\n  //     case `\"`:\r\n  //       return insertInto(`\"`, e.target);\r\n  //     case `'`:\r\n  //       return insertInto(`'`, e.target);\r\n  //     default:\r\n  //   }\r\n  // };\r\n\r\n  const handleSave = () => {\r\n    console.log(code);\r\n    console.log(params.id, params.roomid);\r\n    axios({\r\n      method: \"PATCH\",\r\n      url: \"https://codeio-backend.herokuapp.com/room/save\",\r\n      data: {\r\n        id: params.id,\r\n        roomid: params.roomid,\r\n        content: code,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleConnection = (state) => {\r\n    setConstate(state);\r\n    if (state === \"disconnected\") {\r\n      wsProvider.current.disconnect();\r\n    } else if (state === \"connected\") {\r\n      wsProvider.current.connect();\r\n    }\r\n  };\r\n\r\n  const handleNewTab = () => {\r\n    window.open(\"https://localhost:300\", \"_blank\");\r\n  };\r\n\r\n  const TextFile = (notes) => {\r\n    const element = document.createElement(\"a\");\r\n    const file = new Blob([notes], {\r\n      type: \"text/plain\",\r\n    });\r\n    element.href = URL.createObjectURL(file);\r\n    element.download = \"myNotes.txt\";\r\n    document.body.appendChild(element); // Required for this to work in FireFox\r\n    element.click();\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"100%\", height: \"95vh\" }}>\r\n      <Grid\r\n        container\r\n        style={{\r\n          height: \"100%\",\r\n          width: \"100%\",\r\n          // padding: \"20px\",\r\n        }}\r\n      >\r\n        <Grid item container xs={12} sm={8} style={{ height: \"100%\" }}>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={12}\r\n            style={{\r\n              height: \"80%\",\r\n              border: \"4px solid black\",\r\n              fontSize: \"15px\",\r\n              position: \"relative\",\r\n            }}\r\n          >\r\n            <CodeMirror //code\r\n              id=\"textarea\"\r\n              // value={reset ? \" \" : { code }}\r\n              value={code}\r\n              editorDidMount={(editor) => {\r\n                codeMirrorRef.current = editor;\r\n                editor.setSize(\"\", \"100%\");\r\n              }}\r\n              options={{\r\n                mode:\r\n                  lang === 54 ? \"text/x-c++src\" : lang === 71 ? \"python\" : null,\r\n                // mode: \"python\",\r\n                theme: theme2,\r\n                lineNumbers: true,\r\n                lineWrapping: true,\r\n                matchBrackets: true,\r\n                styleActiveLine: { nonEmpty: true },\r\n                styleActiveSelected: true,\r\n                smartIndent: true,\r\n                highlightSelectionMatches: {\r\n                  showToken: /\\w/,\r\n                  annotateScrollbar: true,\r\n                },\r\n                autoCloseBrackets: true,\r\n                extraKeys: {\r\n                  \"Ctrl-Q\": function (cm) {\r\n                    cm.foldCode(cm.getCursor());\r\n                  },\r\n\r\n                  // 'Ctrl-/': editor.execCommand('toggleComment')\r\n                  \"Ctrl-/\": function (cm) {\r\n                    cm.execCommand(cm.toggleComment());\r\n                  },\r\n                },\r\n                foldGutter: true,\r\n                gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\r\n              }}\r\n              onBeforeChange={(editor, data, value) => {\r\n                setReset(false);\r\n                setCode(value);\r\n              }}\r\n            />\r\n            <Button\r\n              onClick={handleSave}\r\n              style={{\r\n                position: \"absolute\",\r\n                bottom: \"15px\",\r\n                color: \"white\",\r\n                zIndex: 100,\r\n                right: \"0px\",\r\n              }}\r\n            >\r\n              <SaveIcon />{\" \"}\r\n            </Button>\r\n            {/* <button\r\n              style={{\r\n                // position: \"absolute\",\r\n                // right: \"32px\",\r\n                // top: \"85px\",\r\n                // cursor: \"pointer\",\r\n                position: \"relative\",\r\n                left: \"49rem\",\r\n                top: \"7px\",\r\n                cursor: \"pointer\",\r\n                zIndex: \"10\",\r\n              }}\r\n              onClick={() => {\r\n                copy(code);\r\n              }}\r\n            >\r\n              <FileCopyOutlinedIcon />\r\n            </button> */}\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={12}\r\n            style={{\r\n              height: \"10%\",\r\n              border: \"4px solid black\",\r\n              fontSize: \"15px\",\r\n              position: \"relative\",\r\n            }}\r\n          >\r\n            <textarea\r\n              id=\"myInput\"\r\n              rows=\"3\"\r\n              value={note}\r\n              style={{ height: \"91%\", width: \"94%\" }}\r\n              onChange={(e) => setNote(e.target.value)}\r\n            ></textarea>\r\n            <Button\r\n              type=\"button\"\r\n              onClick={() => TextFile(note)}\r\n              value=\"save\"\r\n              id=\"save\"\r\n              style={{\r\n                height: \"100%\",\r\n                right: \"0px\",\r\n                position: \"absolute\",\r\n                background: \"springgreen\",\r\n              }}\r\n            >\r\n              <GetAppIcon />\r\n            </Button>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={12}\r\n            style={{ height: \"10%\", border: \"2px solid black\" }}\r\n          >\r\n            <MenuBar\r\n              handleLanguage={handleLanguage}\r\n              handleReset={handleReset}\r\n              handleTheme={handleTheme}\r\n              users={users}\r\n              conState={conState}\r\n              handleConnection={handleConnection}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          container\r\n          xs={12}\r\n          sm={4}\r\n          spacing={0}\r\n          style={{ height: \"100%\" }}\r\n        >\r\n          <Grid item container style={{ height: \"90%\" }}>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              sm={12}\r\n              style={{\r\n                height: \"50%\",\r\n                border: \"4px solid black\",\r\n                fontSize: \"15px\",\r\n              }}\r\n            >\r\n              <CodeMirror //input\r\n                name=\"code\"\r\n                value={input}\r\n                editorDidMount={(editor) => {\r\n                  editor.setSize(\"\", \"100%\");\r\n                }}\r\n                options={{\r\n                  mode: \"text/x-c++src\",\r\n                  theme: theme2,\r\n                  // lineNumbers: true,\r\n                  // foldOptions: true,\r\n                  // foldGutter: true,\r\n                  // gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\r\n                }}\r\n                onBeforeChange={(editor, data, value) => {\r\n                  setInput(value);\r\n                }}\r\n              />\r\n            </Grid>\r\n            <Grid\r\n              item\r\n              xs={12}\r\n              sm={12}\r\n              style={{\r\n                height: \"50%\",\r\n                border: \"4px solid black\",\r\n                fontSize: \"15px\",\r\n              }}\r\n            >\r\n              <CodeMirror //output\r\n                name=\"code\"\r\n                value={output}\r\n                editorDidMount={(editor) => {\r\n                  editor.setSize(\"\", \"100%\");\r\n                }}\r\n                options={{\r\n                  mode: \"text/x-c++src\",\r\n                  theme: theme2,\r\n                  // lineNumbers: true,\r\n                  // gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\r\n                  // matchBrackets: true,\r\n                  // autoCloseBrackets: true,\r\n                }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            sm={12}\r\n            className=\"shadow\"\r\n            style={{ height: \"10%\" }}\r\n          >\r\n            <Button\r\n              style={{\r\n                width: \"98%\",\r\n                height: \"80%\",\r\n                margin: \"8px 5px\",\r\n                borderRadius: \"0px\",\r\n                zIndex: \"1000000000\",\r\n                color: \"white\",\r\n                background:\r\n                  \"linear-gradient(45deg,rgb(0 0 0 / 64%), rgb(18 16 24 / 97%))\",\r\n              }}\r\n              variant=\"contained\"\r\n              // color=\"primary\"\r\n              onClick={handleSubmitCode}\r\n            >\r\n              Compile And Run\r\n            </Button>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CodeIO;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    textAlign: \"center\",\r\n    height:\"5vh\"\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar\r\n        position=\"static\"\r\n        style={{\r\n          textAlign: \"center\",\r\n          background: \"linear-gradient(45deg, #171515, #7e1111)\",\r\n        }}\r\n      >\r\n        <Toolbar variant=\"dense\" style={{ textAlign: \"center\" }}>\r\n          {/* <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n          <Grid container justify=\"center\">\r\n            <Grid item>\r\n              <Typography variant=\"h6\" color=\"inherit\">\r\n                CODEIO IDE\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Axios from \"axios\";\r\n\r\nconst Home = () => {\r\n  const history = useHistory();\r\n  const [email, setEmail] = useState(\"\");\r\n  useEffect(() => {\r\n    var myemail = prompt(\"Please enter your email\");\r\n    if (myemail) {\r\n      setEmail(myemail);\r\n    }\r\n  }, []);\r\n\r\n  const handleCreate = () => {\r\n    Axios({\r\n      method: \"POST\",\r\n      // url: \"http://localhost:8000/room/createroom\",\r\n      url: \"https://codeio-backend.herokuapp.com/room/createroom\",\r\n      data: {\r\n        email,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        console.log(res.data.roomid);\r\n        history.push(`/${res.data.id}/${res.data.roomid}`);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleCreate}>Join Room</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport CodeIO from \"./components/CodeIO\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport { Route, Switch, BrowserRouter } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nconst App = () => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Navbar />\r\n      <div style={{ height: \"100%\" }}>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/CodeIO-IDE\" component={Home} />\r\n          <Route exact path=\"/:id/:roomid\" component={CodeIO} />\r\n        </Switch>\r\n      </div>\r\n    </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default App;\r\n{\r\n  /* <Home /> */\r\n}\r\n{\r\n  /* <Navbar />\r\n      <CodeIO /> */\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister()\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message)\r\n      })\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport \"./index.css\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\nserviceWorker.register();\r\n"],"sourceRoot":""}