{"version":3,"sources":["components/MenuBar.js","components/CodeIO.js","components/Navbar.js","App.js","index.js"],"names":["MenuBar","handleLanguage","handleReset","handleTheme","useState","lang","setLang","theme","setTheme","AppBar","position","color","Toolbar","variant","Grid","container","item","justify","FormControl","size","style","width","height","marginBottom","InputLabel","id","Select","value","labelId","label","onChange","e","target","MenuItem","marginLeft","Button","onClick","margin","prev","require","base64","CodeIO","code","setCode","token","setToken","output","setOutput","input","setInput","setReset","theme2","bool","ctheme","options","mode","lineNumbers","lineWrapping","matchBrackets","smartIndent","autoCloseBrackets","extraKeys","cm","foldCode","getCursor","execCommand","toggleComment","foldGutter","gutters","onBeforeChange","editor","data","left","bottom","cursor","zIndex","copy","padding","sm","name","foldOptions","source","inp","axios","method","url","headers","accept","useQueryString","language_id","source_code","stdin","then","response","console","log","catch","error","res","compile_output","str","decode","atob","stdout","err","useStyles","makeStyles","root","flexGrow","textAlign","menuButton","marginRight","spacing","Navbar","classes","className","Typography","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.da6eab94.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Brightness7Icon from \"@material-ui/icons/Brightness7\";\r\nimport SubjectIcon from \"@material-ui/icons/Subject\";\r\n\r\nconst MenuBar = ({ handleLanguage, handleReset, handleTheme }) => {\r\n  const [lang, setLang] = useState(\"C++\");\r\n  const [theme, setTheme] = useState(\"material\");\r\n\r\n  return (\r\n    <AppBar position=\"static\" color=\"secondary\">\r\n      <Toolbar variant=\"dense\">\r\n        <Grid container>\r\n          <Grid item container justify=\"flex-start\">\r\n            <Grid item>\r\n              <FormControl\r\n                variant=\"outlined\"\r\n                size=\"small\"\r\n                style={{ width: \"180px\", height: \"30px\", marginBottom: \"5px\" }}\r\n              >\r\n                <InputLabel id=\"demo-simple-select-outlined-label\">\r\n                  Language\r\n                </InputLabel>\r\n                <Select\r\n                  value={lang}\r\n                  labelId=\"demo-simple-select-outlined-label\"\r\n                  id=\"demo-simple-select-outlined\"\r\n                  label=\"C++\"\r\n                  onChange={(e) => {\r\n                    setLang(e.target.value);\r\n                    handleLanguage(e.target.value);\r\n                  }}\r\n                >\r\n                  <MenuItem value={54}>\r\n                    <em>C++</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={71}>\r\n                    <em>Python</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={62}>\r\n                    <em>Java</em>\r\n                  </MenuItem>\r\n                  <MenuItem value={63}>\r\n                    <em>Javascript</em>\r\n                  </MenuItem>\r\n                </Select>\r\n              </FormControl>\r\n            </Grid>\r\n            <Grid item style={{ marginLeft: \"30px\" }}>\r\n              <Button\r\n                onClick={() => {\r\n                  handleReset(true);\r\n                }}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n              >\r\n                Reset\r\n              </Button>\r\n            </Grid>\r\n            <Grid item style={{ margin: \"0px 0px 5px 30px\" }}>\r\n              <Button\r\n                onClick={() => {\r\n                  setTheme((prev) => {\r\n                    if (prev === \"material\") {\r\n                      return \"neat\";\r\n                    } else {\r\n                      return \"material\";\r\n                    }\r\n                  });\r\n                  handleTheme(theme);\r\n                }}\r\n              >\r\n                <Brightness7Icon />\r\n              </Button>\r\n            </Grid>\r\n            <Grid item style={{ margin: \"0px 0px 5px 30px\" }}>\r\n              <Button>\r\n                <SubjectIcon />\r\n              </Button>\r\n            </Grid>\r\n          </Grid>\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default MenuBar;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport axios from \"axios\";\r\nimport { Controlled as CodeMirror } from \"react-codemirror2\";\r\nimport FileCopyOutlinedIcon from \"@material-ui/icons/FileCopyOutlined\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport copy from \"copy-to-clipboard\";\r\nimport MenuBar from \"./MenuBar\";\r\nimport \"./foldgutter.css\";\r\nrequire(\"codemirror/lib/codemirror.css\");\r\nrequire(\"codemirror/theme/material.css\");\r\nrequire(\"codemirror/theme/neat.css\");\r\nrequire(\"codemirror/mode/xml/xml.js\");\r\nrequire(\"codemirror/mode/clike/clike.js\");\r\nrequire(\"codemirror/mode/python/python.js\");\r\nrequire(\"codemirror/mode/cmake/cmake.js\");\r\nrequire(\"codemirror/mode/javascript/javascript.js\");\r\nrequire(\"codemirror/addon/edit/matchbrackets.js\");\r\nrequire(\"codemirror/addon/edit/closebrackets.js\");\r\nrequire(\"codemirror/addon/fold/foldgutter.js\");\r\nrequire(\"codemirror/addon/fold/foldgutter.css\");\r\nrequire(\"codemirror/addon/fold/brace-fold.js\");\r\nrequire(\"codemirror/addon/fold/comment-fold.js\");\r\nrequire(\"codemirror/addon/fold/indent-fold.js\");\r\nrequire(\"codemirror/addon/fold/markdown-fold.js\");\r\nrequire(\"codemirror/addon/fold/xml-fold.js\");\r\nrequire(\"codemirror/addon/comment/comment.js\");\r\nvar base64 = require(\"base-64\");\r\nfunction CodeIO() {\r\n  const [code, setCode] = useState(\"\");\r\n  const [token, setToken] = useState(\"\");\r\n  const [output, setOutput] = useState(\"See Output Here\");\r\n  const [input, setInput] = useState(\"\");\r\n  const [lang, setLang] = useState(\"C++\");\r\n  const [reset, setReset] = useState(false);\r\n  const [theme2, setTheme] = useState(\"material\");\r\n\r\n  const handleSubmitCode = () => {\r\n    const source = `${code}`;\r\n    const inp = `${input}`;\r\n    // console.log(source);\r\n\r\n    axios({\r\n      method: \"POST\",\r\n      url: `https://judge0.p.rapidapi.com/submissions`,\r\n      headers: {\r\n        \"content-type\": \"application/json\",\r\n        \"x-rapidapi-host\": \"judge0.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": \"7b3dddefe1msheb8ab51a9e386f1p114d8ejsn6f6d49dd4d69\",\r\n        accept: \"application/json\",\r\n        useQueryString: true,\r\n      },\r\n      data: {\r\n        language_id: lang,\r\n        source_code: source,\r\n        stdin: inp,\r\n      },\r\n    })\r\n      .then((response) => {\r\n        console.log(response.data);\r\n        setToken(response.data.token);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    axios({\r\n      method: \"GET\",\r\n      url: `https://judge0.p.rapidapi.com/submissions/${token}?base64_encoded=true`,\r\n      headers: {\r\n        \"content-type\": \"application/octet-stream\",\r\n        \"x-rapidapi-host\": \"judge0.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": `0e3af1fc74mshad035c1ca88d824p139da6jsn8ab4b4057169`,\r\n        useQueryString: true,\r\n      },\r\n    })\r\n      .then((res) => {\r\n        if (res.data.compile_output) {\r\n          let str = res.data.compile_output;\r\n          console.log(base64.decode(str));\r\n          setOutput(base64.decode(str));\r\n        } else {\r\n          setOutput(atob(res.data.stdout));\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const handleChange = (value) => {\r\n    setCode(value);\r\n  };\r\n\r\n  const handleInput = (value) => {\r\n    setInput(value);\r\n  };\r\n\r\n  const handleLanguage = (lang) => {\r\n    setLang(lang);\r\n  };\r\n\r\n  const handleReset = (bool) => {\r\n    setCode(\"\");\r\n    setReset(bool);\r\n  };\r\n\r\n  const handleTheme = (ctheme) => {\r\n    setTheme(ctheme);\r\n  };\r\n\r\n  // const handleTab = (e) => {\r\n  //   if (e.keyCode === 9) {\r\n  //     // tab was pressed\r\n  //     // get caret position/selection\r\n  //     var start = e.target.selectionStart;\r\n  //     var end = e.target.selectionEnd;\r\n\r\n  //     var target = e.target;\r\n  //     var value = target.value;\r\n\r\n  //     // set textarea value to: text before caret + tab + text after caret\r\n  //     target.value = value.substring(0, start) + \"\\t\" + value.substring(end);\r\n\r\n  //     // put caret at right position again (add one for the tab)\r\n  //     e.target.selectionStart = e.target.selectionEnd = start + 1;\r\n\r\n  //     // prevent the focus lose\r\n  //     e.preventDefault();\r\n  //   }\r\n  // };\r\n\r\n  // const insertInto = (str, input) => {\r\n  //   var val = input.value,\r\n  //     s = input.selectionStart,\r\n  //     e = input.selectionEnd;\r\n  //   input.value = val.slice(0, e) + str + val.slice(e);\r\n  //   if (e == s) input.selectionStart += str.length - 1;\r\n  //   input.selectionEnd = e + str.length - 1;\r\n  // };\r\n\r\n  // const handleClose = (e) => {\r\n  //   switch (e.key) {\r\n  //     case \"{\":\r\n  //       return insertInto(\"}\", e.target);\r\n  //     case \"[\":\r\n  //       return insertInto(\"]\", e.target);\r\n  //     case \"(\":\r\n  //       return insertInto(\")\", e.target);\r\n  //     case \"<\":\r\n  //       return insertInto(\">\", e.target);\r\n  //     case `\"`:\r\n  //       return insertInto(`\"`, e.target);\r\n  //     case `'`:\r\n  //       return insertInto(`'`, e.target);\r\n  //     default:\r\n  //   }\r\n  // };\r\n\r\n  const handleNewTab = () => {\r\n    window.open(\"https://localhost:300\", \"_blank\");\r\n  };\r\n\r\n  return (\r\n    <div style={{ width: \"100%\" }}>\r\n      <div style={{ margin: \"30px\" }}>\r\n        <Grid>\r\n          <MenuBar\r\n            handleLanguage={handleLanguage}\r\n            handleReset={handleReset}\r\n            handleTheme={handleTheme}\r\n          />\r\n        </Grid>\r\n        <Grid>\r\n          <CodeMirror\r\n            id=\"textarea\"\r\n            // value={reset ? \" \" : { code }}\r\n            value={code}\r\n            options={{\r\n              mode:\r\n                lang === 54 ? \"text/x-c++src\" : lang === 71 ? \"python\" : null,\r\n              // mode: \"python\",\r\n              theme: theme2,\r\n              lineNumbers: true,\r\n              lineWrapping: true,\r\n              matchBrackets: true,\r\n              smartIndent: true,\r\n              autoCloseBrackets: true,\r\n              extraKeys: {\r\n                \"Ctrl-Q\": function (cm) {\r\n                  cm.foldCode(cm.getCursor());\r\n                },\r\n\r\n                // 'Ctrl-/': editor.execCommand('toggleComment')\r\n                \"Ctrl-/\": function (cm) {\r\n                  cm.execCommand(cm.toggleComment());\r\n                },\r\n              },\r\n              foldGutter: true,\r\n              gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\r\n            }}\r\n            onBeforeChange={(editor, data, value) => {\r\n              setReset(false);\r\n              setCode(value);\r\n            }}\r\n          />\r\n          <button\r\n            style={{\r\n              // position: \"absolute\",\r\n              // right: \"32px\",\r\n              // top: \"85px\",\r\n              // cursor: \"pointer\",\r\n              position: \"relative\",\r\n              left: \"71rem\",\r\n              bottom: \"21.3rem\",\r\n              cursor: \"pointer\",\r\n              zIndex: \"10\",\r\n            }}\r\n            onClick={() => {\r\n              copy(code);\r\n            }}\r\n          >\r\n            <FileCopyOutlinedIcon />\r\n          </button>\r\n        </Grid>\r\n      </div>\r\n      <Grid container style={{ padding: \"20px\" }}>\r\n        <Grid item container sm={6} justify=\"center\">\r\n          <Grid item style={{ width: \"500px\" }}>\r\n            <CodeMirror\r\n              name=\"code\"\r\n              value={input}\r\n              options={{\r\n                mode: \"text/x-c++src\",\r\n                theme: theme2,\r\n                lineNumbers: true,\r\n                foldOptions: true,\r\n                foldGutter: true,\r\n                gutters: [\"CodeMirror-linenumbers\", \"CodeMirror-foldgutter\"],\r\n              }}\r\n              onBeforeChange={(editor, data, value) => {\r\n                setInput(value);\r\n              }}\r\n            />\r\n          </Grid>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleSubmitCode}\r\n            style={{ width: \"70px\" }}\r\n          >\r\n            {/* C <br /> o <br />m<br />p<br />i<br />l<br />e */}\r\n            Compile\r\n          </Button>\r\n        </Grid>\r\n        <Grid item container sm={6} justify=\"center\">\r\n          <Grid item style={{ width: \"500px\" }}>\r\n            <CodeMirror\r\n              name=\"code\"\r\n              value={output}\r\n              options={{\r\n                mode: \"text/x-c++src\",\r\n                theme: theme2,\r\n                lineNumbers: true,\r\n                // matchBrackets: true,\r\n                // autoCloseBrackets: true,\r\n              }}\r\n            />\r\n          </Grid>\r\n\r\n          <Button\r\n            style={{ width: \"70px\" }}\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleSubmit}\r\n          >\r\n            {/* R<br />u<br />n */}\r\n            Run\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CodeIO;\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    textAlign: \"center\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst Navbar = () => {\r\n  const classes = useStyles();\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\" style={{ textAlign: \"center\" }}>\r\n        <Toolbar variant=\"dense\" style={{ textAlign: \"center\" }}>\r\n          {/* <IconButton\r\n            edge=\"start\"\r\n            className={classes.menuButton}\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n          >\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n          <Grid container justify=\"center\">\r\n            <Grid item>\r\n              <Typography variant=\"h6\" color=\"inherit\">\r\n                CODEIO IDE\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport CodeIO from \"./components/CodeIO\";\r\nimport Navbar from \"./components/Navbar\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Navbar />\r\n      <CodeIO />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}